(require 'baoduy/load-package)

(require 'baoduy/misc-func)
(require 'baoduy/cusKey)

(require 'baoduy/dbd-init-ac)
(require 'recentf)

(autopair-global-mode 1)
(global-auto-highlight-symbol-mode)
(add-hook 'prog-mode-hook 'yas-minor-mode)
(add-hook 'prog-mode-hook 'eldoc-mode)
(fset 'yes-or-no-p 'y-or-n-p)
(setq display-time-24hr-format t)
(global-auto-revert-mode t)
(desktop-save-mode 1)
(setq make-backup-files nil
      auto-save-default t)
(recentf-mode 1)
(setq recentf-max-menu-items 25)
(global-set-key (kbd "C-S-t") 'recentf-open-files) ; similar (define-key global-map <key> <symbol>)


;; load customize for each work-mode
(cond
 ((string= "CEDET" work-mode) 
  (print "load cedet space")
  (require 'baoduy/cedet-config))
 ((string= "C/C++ IDE" work-mode)
  (print "My setup for C/C++ development")
  (require 'baoduy/c-c++-ide-config))
 ((string= "ORG" work-mode) 
  (print "load cedet space")
  (require 'baoduy/org-config))
 ((string= "JAVA" work-mode) 
  (print "load JAVA IDE space")
  (require 'baoduy/java-config))
 ((string= "ECLIM" work-mode) 
  (print "load ECLIM IDE space")
  (require 'baoduy/eclim-config))
 ((string= "ANDROID" work-mode) 
  (print "load cedet space")
  (require 'baoduy/android-config))
 ((string= "ELISP" work-mode) 
  (print "load cedet space")
  (require 'baoduy/elisp-config))
 ((string= "SCHEME" work-mode) 
  (print "load cedet space")
  (require 'baoduy/scheme-config))
 ((string= "CLOJURE" work-mode)
  (print "My setup for clojure environment")
  (require 'baoduy/clojure-config))
 ((string= "ORG2BLOG" work-mode)
  (print "My setup for org2blog environment")
  (require 'baoduy/org2blog-config))
 (t 
  (print "Load default space")
  (require 'baoduy/default-config)
  ))

(require 'baoduy/ui)
(provide 'baoduy)
